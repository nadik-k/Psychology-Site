import React, { useEffect, useState } from 'react';
import picture from '../Home/girl.png';
import faq from '../Home/faq.png';
import "./Home.css";
import TeamCards from '../TeamCards/TeamCards';
import axios from "axios";
import { useNavigate } from 'react-router-dom';

const FAQItem = ({ question, answer }) => {
    const [isOpen, setIsOpen] = useState(false);
    return (
        <div className={`faq-item ${isOpen ? 'open' : ''}`}>
            <h3 onClick={() => setIsOpen(!isOpen)}>{question}</h3>
            {isOpen && <p>{answer}</p>}
        </div>
    );
};

const SliderWithValue = ({ label, name, value, onChange }) => {
    return (
        <div className="slider-wrapper">
            <label>
                {label}
                <input type="range" min="0" max="5" value={value} name={name} onChange={onChange} />
                <div className="slider-value" style={{ left: `${(value / 5) * 100}%` }}>{value}</div>
            </label>
        </div>
    );
};

const helpTopics = [
    { title: '–¢—Ä–∏–≤–æ–≥–∞', description: '–ù–∞—à—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –≤–æ–ª–æ–¥—ñ—é—Ç—å —à–∏—Ä–æ–∫–∏–º –∞—Ä—Å–µ–Ω–∞–ª–æ–º —Å—É—á–∞—Å–Ω–∏—Ö –Ω–∞—É–∫–æ–≤–æ-–¥–æ–∫–∞–∑–æ–≤–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤...', color: 'pink' },
    { title: '–î–µ–ø—Ä–µ—Å—ñ—è', description: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏ —Ü–µ–Ω—Ç—Ä—É –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π, –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ —Å–∏–ª–∏...', color: 'grey' },
    { title: '–í—Ç—Ä–∞—Ç–∞ —Ç–∞ –≥–æ—Ä—é–≤–∞–Ω–Ω—è', description: '–ú–∏ –±—É–¥–µ–º–æ –ø–æ—Ä—É—á, —Å—Ç–∞–Ω–µ–º–æ –æ–ø–æ—Ä–æ—é —É –≤–∞–∂–∫—ñ —á–∞—Å–∏...', color: 'violet' },
    { title: '–°—Ç—Ä–∞—Ö–∏ —Ç–∞ —Ñ–æ–±—ñ—ó', description: '–°—Ç—Ä–∞—Ö ‚Äî –ø—Ä–∏—Ä–æ–¥–Ω–æ, –∞–ª–µ –Ω–∞–≤‚Äô—è–∑–ª–∏–≤—ñ —Ñ–æ–±—ñ—ó –º–æ–∂–Ω–∞ –ø–æ–¥–æ–ª–∞—Ç–∏ —Ä–∞–∑–æ–º –∑ –Ω–∞–º–∏...', color: 'blue' },
    { title: '–†–æ–∑–ª–∞–¥–∏ —Ö–∞—Ä—á–æ–≤–æ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏', description: '–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –≤–∞–º –≤–ø–æ—Ä–∞—Ç–∏—Å—è –∑ –ø–æ—Ä—É—à–µ–Ω–Ω—è–º–∏ —Ö–∞—Ä—á–æ–≤–æ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏...', color: 'green' },
    { title: '–°–∞–º–æ–æ—Ü—ñ–Ω–∫–∞', description: '–ù–∏–∑—å–∫–∞ —Å–∞–º–æ–æ—Ü—ñ–Ω–∫–∞ –º–æ–∂–µ –±—É—Ç–∏ –ø—Ä–∏—á–∏–Ω–æ—é –±–∞–≥–∞—Ç—å–æ—Ö –ø—Ä–æ–±–ª–µ–º ‚Äî –º–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –≤–∞–º –∑–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –¥–æ —Å–µ–±–µ...', color: 'yellow' },
    { title: '–¢—Ä—É–¥–Ω–æ—â—ñ –≤ —Å—Ç–æ—Å—É–Ω–∫–∞—Ö', description: '–ü—Å–∏—Ö–æ–ª–æ–≥ –¥–æ–ø–æ–º–æ–∂–µ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è —É –≤–∞—à–∏—Ö —Å—Ç–æ—Å—É–Ω–∫–∞—Ö, –≤–∏—è–≤–∏—Ç–∏ –ø—Ä–∏—á–∏–Ω–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤...', color: 'orange' },
    { title: '–†–æ–±–æ—Ç–∞ –∑ –¥—ñ—Ç—å–º–∏ —Ç–∞ –ø—ñ–¥–ª—ñ—Ç–∫–∞–º–∏', description: '–ú–∏ –Ω–∞–¥–∞—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –¥—ñ—Ç—è–º, –ø—ñ–¥–ª—ñ—Ç–∫–∞–º —ñ —ó—Ö–Ω—ñ–º –±–∞—Ç—å–∫–∞–º...', color: 'aqua' },
];

const questions = [
    { name: 'q1', label: '–ù–∞—Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—Ç–æ –≤–∏ –≤—ñ–¥—á—É–≤–∞–ª–∏ —Ç—Ä–∏–≤–æ–≥—É?' },
    { name: 'q2', label: '–ù–∞—Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—Ç–æ –≤–∏ –≤—ñ–¥—á—É–≤–∞–ª–∏ –≤—Ç–æ–º—É —á–∏ –≤–∏—Å–Ω–∞–∂–µ–Ω–Ω—è?' },
    { name: 'q3', label: '–ß–∏ –≤—ñ–¥—á—É–≤–∞–ª–∏ –≤–∏ —Å–∞–º–æ—Ç–Ω—ñ—Å—Ç—å?' }
];

function Home() {
    const navigate = useNavigate();
    const [cards, setCards] = useState([]);

    useEffect(() => {
        axios.get("http://localhost:5000/api/cards")
            .then(res => setCards(res.data))
            .catch(err => console.error("–ü–æ–º–∏–ª–∫–∞:", err));
    }, []);

    const [score, setScore] = useState(null);
    const [answers, setAnswers] = useState(() => {
        const initial = {};
        questions.forEach(q => {
            initial[q.name] = 0;
        });
        return initial;
    });


    const handleChange = (e) => {
        const { name, value } = e.target;
        setAnswers(prev => ({ ...prev, [name]: parseInt(value) }));
    };

    const calculate = () => {
        const total = Object.values(answers).reduce((a, b) => a + b, 0);
        setScore(total);
    };

    const getRecommendation = (score) => {
        if (score <= 4) {
            return "üü¢–í–∞—à –µ–º–æ—Ü—ñ–π–Ω–∏–π —Å—Ç–∞–Ω –≤–∏–≥–ª—è–¥–∞—î —Å—Ç–∞–±—ñ–ª—å–Ω–∏–º. –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –ø—ñ–∫–ª—É–≤–∞—Ç–∏—Å—è –ø—Ä–æ —Å–µ–±–µ.";
        } else if (score <= 8) {
            return "üü°–ú–æ–∂–ª–∏–≤–æ, –≤–∏ –≤—ñ–¥—á—É–≤–∞—î—Ç–µ –¥–µ—è–∫–∏–π –µ–º–æ—Ü—ñ–π–Ω–∏–π –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç. –ü–æ–¥—É–º–∞–π—Ç–µ –ø—Ä–æ —Ä–æ–∑–º–æ–≤—É –∑ –±–ª–∏–∑—å–∫–∏–º–∏ –∞–±–æ –∫–æ—Ä–æ—Ç–∫—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.";
        } else if (score <= 12) {
            return "üü†–í–∞—Ä—Ç–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É –Ω–∞ —Å–≤—ñ–π —Å—Ç–∞–Ω. –ú–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º.";
        } else {
            return "üî¥–í–∞—à —Å—Ç–∞–Ω –ø–æ—Ç—Ä–µ–±—É—î –ø—ñ–¥—Ç—Ä–∏–º–∫–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ñ–∞—Ö—ñ–≤—Ü—è —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ. –í–∏ –Ω–µ —Å–∞–º—ñ.";
        }
    };

    const faqData = [
        {
            question: '–ß–∏ –º–æ–∂—É —è –æ–±—Ä–∞—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ?',
            answer: '–¢–∞–∫, —É –Ω–∞—Å —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –ø—Ä–æ—Ñ—ñ–ª—è–º–∏ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤ —Ç–∞ –æ–±—Ä–∞—Ç–∏ —Ç–æ–≥–æ, —Ö—Ç–æ –≤–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å.'
        },
        {
            question: '–Ø–∫—ñ —î —Ñ–æ—Ä–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π?',
            answer: '–î–æ—Å—Ç—É–ø–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: –≤—ñ–¥–µ–æ, –∞—É–¥—ñ–æ –∞–±–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —á–∞—Ç. –í–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ –Ω–∞–π–∑—Ä—É—á–Ω—ñ—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç.'
        },
        {
            question: '–ß–∏ —î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó?',
            answer: '–¢–∞–∫, –º–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ —Å–µ—Å—ñ—ó –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤, –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü—ñ–≤ —Ç–∞ –º–æ–ª–æ–¥—ñ –¥–æ 21 —Ä–æ–∫—É.'
        },
        {
            question: '–Ø–∫—ñ –º–µ—Ç–æ–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏?',
            answer: '–£—Å—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–æ–≥–Ω—ñ—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥—ñ–Ω–∫–æ–≤–æ—ó —Ç–µ—Ä–∞–ø—ñ—ó, ACT, EMDR —Ç–∞ —ñ–Ω—à–∏—Ö —Å—É—á–∞—Å–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤.'
        }
    ];

    return (
        <main>
            <section className="hero">
                <div className="hero-content">
                    <h1>–î–∏—Ö–∞–π –≤—ñ–ª—å–Ω–æ</h1>
                    <p>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ "–î–∏—Ö–∞–π –≤—ñ–ª—å–Ω–æ" ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏, –¥–µ –≤–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ —Ä–æ–∑—É–º—ñ–Ω–Ω—è, –¥–æ–ø–æ–º–æ–≥—É —Ç–∞ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è.</p>
                    <hr />
                    <p>–ù–∞—à —Å–µ—Ä–≤—ñ—Å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —à—É–∫–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, —Å–ø–æ–∫—ñ–π –∞–±–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä–µ–±—É—î —Ç–µ–ø–ª–∏—Ö —Å–ª—ñ–≤ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.</p>
                    <a href="#" className="consult-button">–ü–æ—á–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é</a>
                    <a className="consult-button" onClick={() => navigate('/anonymous')}>–ê–Ω–æ–Ω—ñ–º–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞</a>
                </div>
                <div className="hero-image">
                    <img src={picture} alt="–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞" className='home_picture' />
                </div>
            </section>

            <section className="help-section">
                <div className="help-container">
                    <div className="section-header">
                        <p className="subtitle">–ó —á–∏–º –º–∏ –¥–æ–ø–æ–º–∞–≥–∞—î–º–æ</p>
                        <h2>–ù–∞–ø—Ä—è–º–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç—É–≤–∞–Ω–Ω—è</h2>
                    </div>
                    <div className="cards">
                        {helpTopics.map((topic, index) => (
                            <div key={index} className={`card ${topic.color}`}>
                                <h3>{topic.title}</h3>
                                <p>{topic.description}</p>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            <section className="team-section">
                <div className="team-container">
                    <h2>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</h2>
                    <p className="team-description">
                        –ú–∏ –∑—ñ–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É —Ñ–∞—Ö—ñ–≤—Ü—ñ–≤ –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—é –æ—Å–≤—ñ—Ç–æ—é, –¥–æ—Å–≤—ñ–¥–æ–º —Ç–∞ –µ—Ç–∏—á–Ω–∏–º –ø—ñ–¥—Ö–æ–¥–æ–º –¥–æ —Ä–æ–±–æ—Ç–∏.
                        –£—Å—ñ –Ω–∞—à—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å –∑–∞ –Ω–∞—É–∫–æ–≤–æ-–¥–æ–∫–∞–∑–æ–≤–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å –õ–ì–ë–¢–ö–Ü+ –∫–ª—ñ—î–Ω—Ç—ñ–≤.
                    </p>
                    <div className="team-cards">
                        {cards.map(card => (
                            <TeamCards key={card._id} data={card} />
                        ))}
                    </div>
                </div>
            </section>

            <section className="emotion-section">
                <div className="emotion-container">
                    <h2>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Å—Ç–∞–Ω—É</h2>
                    <p>–û—Ü—ñ–Ω—ñ—Ç—å —Å–≤—ñ–π —Å—Ç–∞–Ω –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å:</p>
                    {questions.map((q) => (
                        <SliderWithValue
                            key={q.name}
                            label={q.label}
                            name={q.name}
                            value={answers[q.name]}
                            onChange={handleChange}
                        />
                    ))}
                    <button onClick={calculate}>–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏</button>
                    {score !== null && (
                        <div className="score">
                            <p>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score} / 15</p>
                            <p>{getRecommendation(score)}</p>
                        </div>
                    )}
                </div>
            </section>


            <section className="faq-section">
                <div className="faq-container">
                    <h2>–í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è</h2>
                    <div className="faq-content">
                        <div className="faq-picture">
                            <img src={faq} alt="–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞" className="faq_picture" />
                        </div>
                        <div className="faq-text">
                            {faqData.map((item, index) => (
                                <FAQItem key={index} question={item.question} answer={item.answer} />
                            ))}
                        </div>
                    </div>
                </div>
            </section>

        </main>
    );
}

export default Home;